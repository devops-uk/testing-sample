version: 2.1
defaults: &defaults
    working_directory: /home/circleci/workspace
    docker:
      - image: thirupathip/terraform-aws:go
      - command: |
             aws configure set aws_region ${AWS_DEFAULT_REGION}
             aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
             aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
      - command: chmod -R 770 /home/circleci/
jobs:
   terraform-s3:
     <<: *defaults
     steps:
        - run: 
            name: S3 Creation using terraform
            command: |
                 cd ./weather/terraform/s3
                 terraform init
                 terraform plan
                 terraform apply -auto-approve
   terraform-go:
     <<: *defaults
     steps:
        - run: 
            name: Writing a Lambda function in Go is quite similar
            command: |
                 cd ./weather/faas
                 go get github.com/aws/aws-lambda-go/lambda
                 GOOS=linux go build -o faas main.go
                 zip faas.zip faas
                 aws s3 cp faas.zip s3://{my-artifact-s3-bucket-url}/
   terraform-lambda:
     <<: *defaults
     steps: 
        - run: 
            name: creating the API Gateway and Lambda!
            command: |
                 cd ./weather/terraform/lambda-apigw-iam
                 terraform init
                 terraform plan
                 terraform apply -auto-approve
   terraform-web:
     <<: *defaults
     steps:
        - run: 
            name: The html part is pretty basic
            command: |
                 cd ./weather/frontend
                 aws s3 cp index.html s3://{your-s3-website-bucket}/ --acl public-read 
  
   terraform-destroy:
     <<: *defaults
     steps:
        - run: 
            name: Destroy terraform
            command: |
                 cd terraform/lambda-apigw-iam
                 terraform destroy -auto-approve
                 cd ../s3
                 terraform destroy -auto-approve   

workflows:
    version: 2
    terraform-list-out:
      jobs:
         - checkout 
         - terraform-s3
         - terraform-go:
             requires:
                 - terraform-s3
         - terraform-lambda:
             requires:
                 - terraform-go
         - terraform-web:
             requires:
                 - terraform-lambda
         - terraform-destroy:
             requires:
                 - terraform-lambda

# version: 2.1
# jobs:
#   terraform_apply:
#     working_directory: ~/tmp
#     docker:
#             - image: hashicorp/terraform:light
#             - image: ubuntu
#     steps:
#       - checkout
#       - run:
#           name: terraform apply
#           command: |
#             terraform init
#             # terraform apply -auto-approve
#       - store_artifacts:
#           path: terraform.tfstate

#   terraform_destroy:
#     working_directory: ~/tmp
#     docker:
#             - image: hashicorp/terraform:light
#             - image: ubuntu
#     steps:
#       - checkout
#       - run:
#           name: terraform destroy
#           command: |
#             terraform init
#             # terraform destroy -auto-approve
  

# workflows:
#   version: 2.1
#   terraform:
#     jobs:
#       - terraform_apply
#       - click_here_to_delete:
#           type: approval
#           requires:
#             - terraform_apply
#       - terraform_destroy:
#           requires:
#             - click_here_to_delete